openapi: 3.0.0
info:
  title: User API
  description: Api to register a user and create a login
  version: 0.9.0
servers:
  - url: http://localhost:8080/api
    description: http
  - url: https://localhost:8080/api
    description: https
paths:
  /users/register:
    post:
      summary: Register a user.
      description: User object that will be created
      operationId: registerUser
      requestBody:
        description: User Entity
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/user.yml'
      responses:
        '200':
          description: Registered User
          content:
            application/json:
              schema:
                $ref: 'schemas/user.yml'
  /users/login:
    post:
      summary: login
      operationId: login
      requestBody:
        description: Username and Password to login
        required: true
        content:
          application/json:
            schema:
              type: object
              required: true
              properties:
                username:
                  required: true
                  type: string
                password:
                  required: true
                  type: string
      responses:
        '200':
          description: JWA Token
          content:
            application/json:
              schema:
                type: string
  /users/test:
    get:
      summary: Test
      operationId: getTest
      responses:
        '200':
          description: Test Request
          content:
            application/json:
              schema:
                type: string
  /usergroup:
    put:
      summary: Creates new User Group
      operationId: createUserGroup
      security:
        - jwt: []
      requestBody:
        description: UserGroup to create
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/userGroup.yml'
      responses:
        '200':
          description: created UserGroup
          content:
            application/json:
              schema:
                $ref: 'schemas/userGroup.yml'
    post:
      summary: Update UserGroup
      operationId: updateUserGroup
      security:
        - jwt: [ ]
      requestBody:
        description: UserGroup to update
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/userGroup.yml'
      responses:
        '200':
          description: updated UserGroup
          content:
            application/json:
              schema:
                $ref: 'schemas/userGroup.yml'
  /usergroup/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      summary: Delete usergroup of id
      operationId: deleteUsergroup
      security:
        - jwt: []
      responses:
        '200':
          description: deleted
    get:
      summary: Get usergroup of id
      operationId: getUserGroup
      security:
        - jwt: []
      responses:
        '200':
          description: UserGroup
          content:
            application/json:
              schema:
                $ref: 'schemas/userGroup.yml'

components:
  securitySchemes:
    jwt:
      type: http
      description: JWT Authentication
      scheme: bearer
      bearerFormat: JWT
security:
  - jwt: [ ]